#!/usr/bin/env bash

# This is an auomated script to install archlinux minimal.
# Personal use.	

part_cero(){
	git config --global user.email 'daniel.mendoza@alumnos.udg.mx'
	git config --global user.name 'dannyMendoza'
	main
}

crypted(){
	# encrypt root partition
	mkfs.vfat -F32 /dev/sda1 -n "EFIBOOT"
	cryptsetup luksFormat /dev/sda2
	cryptsetup open /dev/sda2 cryptlvm
	pvcreate /dev/mapper/cryptlvm
	vgcreate archlvm /dev/mapper/cryptlvm
	lvcreate -L 150G archlvm -n cryptroot_lvm
	lvcreate -L 2G archlvm -n cryptswap_lvm
	lvcreate -l 100%FREE archlvm -n crypthome_lvm
	mkfs.ext4 /dev/archlvm/cryptroot_lvm -L "root_arch"
	mkfs.ext4 /dev/archlvm/crypthome_lvm -L "home_arch"
	mkswap /dev/archlvm/cryptswap_lvm -L "swap_arch"
	mount /dev/archlvm/cryptroot_lvm /mnt
	mkdir /mnt/{boot,home}
	mount /dev/sda1 /mnt/boot
	mount /dev/archlvm/crypthome_lvm /mnt/home
	swapon /dev/archlvm/cryptswap_lvm
}

not_crypted(){
	mkfs.vfat -F32 /dev/sda1 -n "EFIBOOT"
	pvcreate /dev/sda2
	vgcreate archlvm /dev/sda2
	lvcreate -L 150G archlvm -n root_lvm
	lvcreate -L 2G archlvm -n swap_lvm
	lvcreate -l 100%FREE archlvm -n home_lvm
	mkfs.ext4 /dev/archlvm/root_lvm -L "root_arch"
	mkfs.ext4 /dev/archlvm/home_lvm -L "home_arch"
	mkswap /dev/archlvm/swap_lvm -L "swap_arch"
	mount /dev/archlvm/root_lvm /mnt
	mkdir /mnt/{boot,home}
	mount /dev/sda1 /mnt/boot
	mount /dev/archlvm/home_lvm /mnt/home
	swapon /dev/archlvm/swap_lvm
}

part_one(){
	# Set latinamerican keyboard layout.
	read -p "Do you wan to use Latinamerican keyboard layout [Y/N]: " keyboard
	case "$keyboard" in
		[Yy])
			loadkeys la-latin1
			echo -e "la-latin1 keyboard layout loaded successfully\n"
		;;
		*)
			echo -e "Using default US keyboard layout\n"
			;;
	esac
	## Check internet connection.
	internet=$(ping -c1 archlinux.org | grep -wo "1 packets")
	if [[ -n $internet ]] ; then
		clear
		echo -e "Internet connection working :)\n"
		sleep 0.5
	else
		echo -e "Internet conection does not work :(\n"
		iwctl	
	fi
	# Update system clock
	timedatectl set-ntp true
	# Bigger font (TERMINUS FONT)
	setfont ter-v32b
	## Sort servers rank for speed
	pacman -Sy pacman-mirrorlist --noconfirm
	pacman -Sy pacman-contrib --noconfirm
	# Get the mirrorlist directly from the website.
	rm -vf /etc/pacman.d/mirrorlist
	curl -o /etc/pacman.d/mirrorlist https://archlinux.org/mirrorlist/all/
	cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.back
	#sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.back
	#rankmirrors -n 5 /etc/pacman.d/mirrorlist.back > /etc/pacman.d/mirrorlist &
	reflector --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
	pid=$!
	## Partioning
	parted --script /dev/sda \
		mklabel gpt \
		mkpart primary fat32 1MiB 513MiB \
		mkpart primary ext4 513MiB 256001MiB \
		set 1 esp on \
		set 2 lvm on
	read -p "Do you want to crypt the partition [Yes|No]=? " partdevice
	while [[ ! "${partdevice}" =~ (Yes|No) ]] ; do
		clear
		read -p "Do you want to crypt the partition [Yes|No]=? " partdevice
	done
	[[ "${partdevice}" == "Yes" ]] && crypted
	[[ "${partdevice}" == "No" ]] && not_crypted
	wait $pid
	pacstrap /mnt base base-devel linux linux-firmware 
	genfstab -p -U /mnt >> /mnt/etc/fstab
	cp AutoInstall /mnt
	echo -e "\n\nCtrl+C if something was wrong" ; sleep 10
	arch-chroot /mnt
}

part_two(){
	# Time zone
	sudo sed -i 's/^#Color/Color/' /etc/pacman.conf
	sudo sed -i 's/^#Parallel/Parallel/' /etc/pacman.conf
	sudo sed -i 's/^#\[\multilib\]/\[multilib\]/' /etc/pacman.conf
	sudo sed -i "$(sed -n '/^#Include/ =' /etc/pacman.conf | tail -n 1)"' s/^#Include/Include/' /etc/pacman.conf
	curl https://geo.mirror.pkgbuild.com/iso/latest/arch/pkglist.x86_64.txt --output pkglist.x86_64.txt
	sed -i 's/ .*$//' pkglist.x86_64.txt
	pacman -S --needed - < pkglist.x86_64.txt --noconfirm
	# Network configuration
	echo -e "[General]\nEnableNetworkConfiguration=True" > /etc/iwd/main.conf
	ln -sf /usr/share/zoneinfo/America/Mexico_city /etc/localtime
	hwclock --systohc
	sed -i 's/^#en_US/en_US/'  /etc/locale.gen
	sed -i 's/^#es_MX/es_MX/'  /etc/locale.gen
	locale-gen
	echo "LANG=en_US.UTF-8" > /etc/locale.conf
	echo -e  "KEYMAP=en_US\nFONT=ter-u28b" > /etc/vconsole.conf
	clear
	read -p "Ingresa el nombre del equipo (hostname): " hostNAME
	echo "$hostNAME" > /etc/hostname
	rm -f /etc/hosts
	echo -e "127.0.0.1\tlocalhost\n::1\t\tlocalhost\n127.0.1.1\t${hostNAME}.localdomain\t$hostNAME" > /etc/hosts
	clear
	echo "Enter the root password"
	passwd
	bootctl install
	rm -f /boot/loader/loader.conf
	echo -e "default\tarch\ntimeout\t5" > /boot/loader/loader.conf

	is_crypted="$(blkid /dev/sda2 | grep -i crypto)"
	if [[ -n "${is_crypted}" ]] ; then
		grep -w "^HOOKS" /etc/mkinitcpio.conf | sed -i 's/block/block lvm2 encrypt/' /etc/mkinitcpio.conf
		mkinitcpio -p linux
		uuid=$(blkid | grep /dev/sda2 | awk {'print $2'} | sed -e 's/"//g')
		echo -e "title GNU/Linux Arch linux [D@NNIX]\nlinux /vmlinuz-linux\ninitrd /intel-ucode.img\ninitrd /initramfs-linux.img\noptions cryptdevice=${uuid}:cryptlvm root=/dev/archlvm/cryptroot_lvm rw" > /boot/loader/entries/arch.conf
	else
		grep -w "^HOOKS" /etc/mkinitcpio.conf | sed -i 's/block/block lvm2/' /etc/mkinitcpio.conf
		mkinitcpio -p linux
		uuid=$(blkid | grep /dev/mapper/archlvm-root_lvm | awk {'print $3'} | sed -e 's/"//g')
		echo -e "title GNU/Linux Arch linux *Mendoza*\nlinux /vmlinuz-linux\ninitrd /intel-ucode.img\ninitrd /initramfs-linux.img\noptions root=${uuid} rw" > /boot/loader/entries/arch.conf
	fi

	read -p "Add User name: " username 
	read -p "Type shell to use (bash or zsh): " shellselected 
	while [[ ! "${shellselected}" =~ (bash|zsh) ]]; do
		read -p "shell must be (bash or zsh): " shellselected 
	done
	useradd -m -G adm,ftp,games,http,log,rfkill,sys,systemd-journal,uucp,wheel,dbus,kmem,lp,mail,proc,root,tty,utmp,disk,floppy,input,kvm,optical,scanner,storage,video,network,power,uuidd,users -s /bin/"${shellselected}" "${username}"
	echo "Enter the ${username} password"
	passwd "${username}"
	sed -i "$(sed -n '/^# %wheel/ =' /etc/sudoers | tail -n 1)"' s/^# %wheel/%wheel/' /etc/sudoers
}

part_three(){
	[[ $EUID -eq 0 ]] && echo -e "You are a root user\n" && exit
	username="$(whoami)"
	sudo pacman -Syyu qtile xorg-drivers xorg-server xorg-apps xorg-xinit xdg-user-dirs ttf-iosevka-nerd\
		alsa alsa-{firmware,lib,plugins,tools,utils} ttc-iosevka\
		numlockx libinput xterm git wget curl chromium  ntfs-3g mlocate ttf-bitstream-vera\
	       	ttf-croscore ttf-dejavu ttf-droid ttf-roboto noto-fonts ttf-liberation ttf-ibm-plex\
	       	ttf-ubuntu-font-family ttf-cascadia-code ttf-fantasque-sans-mono otf-fantasque-sans-mono\
		ttf-fira-mono otf-fira-mono ttf-fira-code gnu-free-fonts ttf-hack inter-font awesome-terminal-fonts\
	       	ttf-linux-libertine ttf-linux-libertine xorg-fonts-type1 noto-fonts-emoji ttf-joypixels\
	       	texlive-core texlive-fontsextra otf-latin-modern otf-latinmodern-math lxappearance-gtk3\
	       	pipewire pipewire-docs wireplumber qpwgraph pipewire-alsa pipewire-pulse hdparm\
		xclip xsel transmission-cli python-dbus python-dbus-next python-xlib python-pip\
		libldm	--noconfirm
	sudo updatedb
	amixer sset Master unmute
	amixer sset Speaker unmute
	amixer sset Headphone unmute
	echo "defaults.pcm.rate_converter \"speexrate_medium\"" > ~/.asoundrc
	cp ~/AutoInstall ~/.Autoinstall
	xdg-user-dirs-update
	rm -rvf /home/"${username}"/.config/user-dirs.dirs ; sleep 2
	rm -rvf /home/"${username}"/*
	mkdir -p /home/"${username}"/{DOCS,DESKTOP,DOWNLOADS,MEDIA,PHOTOS,PUBLIC,TEMPLATES,MUSIC}
	echo -e "XDG_DESKTOP_DIR=\"$HOME/DESKTOP\"\
		\nXDG_DOWNLOAD_DIR=\"$HOME/DOWNLOADS\"\
		\nXDG_TEMPLATES_DIR=\"$HOME/TEMPLATES\"\
		\nXDG_PUBLICSHARE_DIR=\"$HOME/PUBLIC\"\
		\nXDG_DOCUMENTS_DIR=\"$HOME/DOCS\"\
		\nXDG_MUSIC_DIR=\"$HOME/MUSIC\"\
		\nXDG_PICTURES_DIR=\"$HOME/PHOTOS\"\
		\nXDG_VIDEOS_DIR=\"$HOME/MEDIA\"" >> /home/"${username}"/.config/user-dirs.dirs
	xdg-user-dirs-update
	# mkdir -p /home/"${username}"/.config/{bspwm,sxhkd}
	# cp -v /usr/share/doc/bspwm/examples/bspwmrc /home/"${username}"/.config/bspwm/
	# cp -v /usr/share/doc/bspwm/examples/sxhkdrc /home/"${username}"/.config/sxhkd/
	# sed -i 's/urxvt/xterm -bg white -fg black -fn "-xos4-terminus-bold-r-normal--32-320-72-72-c-160-iso10646-1" -bd black -cr white/' /home/"${username}"/.config/sxhkd/sxhkdrc
	# chmod +x /home/"${username}"/.config/bspwm/bspwmrc
	cp -v /etc/X11/xinit/xinitrc /home/"${username}"/.xinitrc
	sed -i '/^$/d' /home/"${username}"/.xinitrc
	sed -i '/^twm/,$d' /home/"${username}"/.xinitrc
	# sudo sed -i 's/^#HandleLid/HandleLid/g' /etc/systemd/logind.conf
	echo -e "xrandr --dpi 144 --output HDMI1 --mode 2560x1440 --pos 1360x0 --output eDP1 --off" >> /home/"${username}"/.xinitrc
	echo "exec qtile start 2>&1" >> /home/"${username}"/.xinitrc
	cd $HOME/DOWN && git clone https://aur.archlinux.org/yay.git
	cd $HOME/DOWN/yay && makepkg -si --noconfirm
	rm -rfv $HOME/DOWN/yay
	yay -Syu --devel --timeupdate --noconfirm
	yay -S ttf-google-fonts-git --nouseask --noconfirm
	yay -S spotify --nouseask --noconfirm
	cd $HOME/.config/ && git clone https://git.suckless.org/dmenu
	cd $HOME/.config/dmenu/ && make && sudo make install clean
	echo -e "Section \"InputClass\"\
		\n\tIdentifier \"libinput touchpad catchall\"\
        \n\tMatchIsTouchpad \"on\"\
        \n\tMatchDevicePath \"/dev/input/event*\"\
        \n\tOption \"Tapping\" \"on\"\
        \n\tOption \"ClickMethod\" \"clickfinger\"\
        \n\tOption \"DisableWhileTyping\" \"on\"\
        \n\tOption \"TappingButtonMap\" \"lrm\"\
        \n\tOption \"NaturalScrolling\" \"on\"\
        \n\tDriver \"libinput\"\
        \nEndSection" > $HOME/30-touchpad.conf
	sudo mv $HOME/30-touchpad.conf /etc/X11/xorg.conf.d/
	#cp ~/Autoinstall ~/Autoinstall
}

quit(){
	clear
	exit 0
}

main(){
	clear
	echo -e "GNU/Linux ARCHLINUX Installation\
		\n\n\t0) GIT personal config\
		\n\t1) Partitioning and init setup\
		\n\t2) Adding a root and user to new sys [arch-root]\
		\n\t3) Installing X system and some other apps [Do not run as root user]\
		\n\t4) Quit\n"
	read -p "Choose an option: " opt
	case $opt in
		0)	part_cero  ;;
		1)	part_one  ;;
		2)	part_two  ;;
		3)	part_three ;;
		4)	quit ;;
		*) 	echo "Option incorrect :("; sleep 2 && main ;;
	esac
}

main
